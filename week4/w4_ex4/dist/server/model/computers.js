"use strict";
var computerModel = require("./computer");
var computers = (function () {
    function computers(computers) {
        if (computers === void 0) { computers = []; }
        var _this = this;
        this.computersList = new Array();
        computers.forEach(function (computer) { return _this.computersList.push(computer); });
    }
    computers.prototype.list = function () {
        return this.computersList;
    };
    computers.prototype.add = function (computerTitle, computerAuthor, computerPublicationDate) {
        var computerIds = this.computersList.map(function (computer) { return computer.getId(); });
        var computerId = Math.max.apply(Math, computerIds) + 1;
        var computer = new computerModel.computer(computerId, computerTitle, computerAuthor, computerPublicationDate);
        this.computersList.push(computer);
        return this.computersList;
    };
    computers.prototype.delete = function (computerId) {
        var deleted = false;
        this.computersList = this.computersList.filter(function (computer) {
            deleted = deleted || computer.getId() === computerId;
            return computer.getId() !== computerId;
        });
        return deleted;
    };
    computers.prototype.fetch = function (computerId) {
        return computerId && this.computersList.filter(function (computer) { return computer.getId() === computerId; }).shift();
    };
    computers.prototype.find = function (computerQuery) {
        var computerId = parseInt(computerQuery);
        computerQuery = computerQuery.toLowerCase();
        return this.computersList.filter(function (computer) { return computer.getId() === computerId
            || computer.getTitle().toLowerCase() === computerQuery
            || computer.getAuthor().toLowerCase() === computerQuery; }).shift();
    };
    return computers;
}());
exports.computers = computers;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVsL2NvbXB1dGVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsMENBQTJDO0FBRTNDO0lBRUksbUJBQVksU0FBNkM7UUFBN0MsMEJBQUEsRUFBQSxjQUE2QztRQUF6RCxpQkFLQztRQUpHLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxLQUFLLEVBQTBCLENBQUM7UUFDekQsU0FBUyxDQUFDLE9BQU8sQ0FDYixVQUFDLFFBQVEsSUFBSyxPQUFBLEtBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFqQyxDQUFpQyxDQUNsRCxDQUFDO0lBQ04sQ0FBQztJQUNNLHdCQUFJLEdBQVg7UUFDSSxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQztJQUM5QixDQUFDO0lBQ00sdUJBQUcsR0FBVixVQUFXLGFBQXFCLEVBQUUsY0FBc0IsRUFBRSx1QkFBK0I7UUFFckYsSUFBSSxXQUFXLEdBQWtCLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUNuRCxVQUFDLFFBQVEsSUFBSyxPQUFBLFFBQVEsQ0FBQyxLQUFLLEVBQUUsRUFBaEIsQ0FBZ0IsQ0FDakMsQ0FBQztRQUNGLElBQUksVUFBVSxHQUFXLElBQUksQ0FBQyxHQUFHLE9BQVIsSUFBSSxFQUFRLFdBQVcsSUFBSSxDQUFDLENBQUM7UUFFdEQsSUFBSSxRQUFRLEdBQUcsSUFBSSxhQUFhLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxhQUFhLEVBQUUsY0FBYyxFQUFFLHVCQUF1QixDQUFDLENBQUM7UUFFOUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDbEMsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUM7SUFDOUIsQ0FBQztJQUNNLDBCQUFNLEdBQWIsVUFBYyxVQUFrQjtRQUU5QixJQUFJLE9BQU8sR0FBWSxLQUFLLENBQUM7UUFDN0IsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FDNUMsVUFBQyxRQUFnQztZQUMvQixPQUFPLEdBQUcsT0FBTyxJQUFJLFFBQVEsQ0FBQyxLQUFLLEVBQUUsS0FBSyxVQUFVLENBQUM7WUFDckQsTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsS0FBSyxVQUFVLENBQUE7UUFDeEMsQ0FBQyxDQUNGLENBQUE7UUFDRCxNQUFNLENBQUMsT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFDTSx5QkFBSyxHQUFaLFVBQWEsVUFBa0I7UUFDM0IsTUFBTSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FDMUMsVUFBQyxRQUFnQyxJQUFLLE9BQUEsUUFBUSxDQUFDLEtBQUssRUFBRSxLQUFLLFVBQVUsRUFBL0IsQ0FBK0IsQ0FDeEUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNkLENBQUM7SUFDTSx3QkFBSSxHQUFYLFVBQVksYUFBcUI7UUFDL0IsSUFBSSxVQUFVLEdBQVcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ2pELGFBQWEsR0FBRyxhQUFhLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDNUMsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUM1QixVQUFDLFFBQWdDLElBQUssT0FBQSxRQUFRLENBQUMsS0FBSyxFQUFFLEtBQUssVUFBVTtlQUNsRSxRQUFRLENBQUMsUUFBUSxFQUFFLENBQUMsV0FBVyxFQUFFLEtBQUssYUFBYTtlQUNuRCxRQUFRLENBQUMsU0FBUyxFQUFFLENBQUMsV0FBVyxFQUFFLEtBQUssYUFBYSxFQUZqQixDQUVpQixDQUMxRCxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ1osQ0FBQztJQUNMLGdCQUFDO0FBQUQsQ0FoREEsQUFnREMsSUFBQTtBQWhEWSw4QkFBUyIsImZpbGUiOiJtb2RlbC9jb21wdXRlcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjb21wdXRlck1vZGVsIGZyb20gJy4vY29tcHV0ZXInXG5cbmV4cG9ydCBjbGFzcyBjb21wdXRlcnMge1xuICAgIHByaXZhdGUgY29tcHV0ZXJzTGlzdDogQXJyYXk8Y29tcHV0ZXJNb2RlbC5jb21wdXRlcj47XG4gICAgY29uc3RydWN0b3IoY29tcHV0ZXJzOiBBcnJheTxjb21wdXRlck1vZGVsLmNvbXB1dGVyPiA9IFtdKSB7XG4gICAgICAgIHRoaXMuY29tcHV0ZXJzTGlzdCA9IG5ldyBBcnJheTxjb21wdXRlck1vZGVsLmNvbXB1dGVyPigpO1xuICAgICAgICBjb21wdXRlcnMuZm9yRWFjaChcbiAgICAgICAgICAgIChjb21wdXRlcikgPT4gdGhpcy5jb21wdXRlcnNMaXN0LnB1c2goY29tcHV0ZXIpXG4gICAgICAgICk7XG4gICAgfVxuICAgIHB1YmxpYyBsaXN0KCk6IEFycmF5PGNvbXB1dGVyTW9kZWwuY29tcHV0ZXI+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcHV0ZXJzTGlzdDtcbiAgICB9XG4gICAgcHVibGljIGFkZChjb21wdXRlclRpdGxlOiBzdHJpbmcsIGNvbXB1dGVyQXV0aG9yOiBzdHJpbmcsIGNvbXB1dGVyUHVibGljYXRpb25EYXRlOiBudW1iZXIpOiBBcnJheTxjb21wdXRlck1vZGVsLmNvbXB1dGVyPiB7XG5cbiAgICAgICAgbGV0IGNvbXB1dGVySWRzOiBBcnJheTxudW1iZXI+ID0gdGhpcy5jb21wdXRlcnNMaXN0Lm1hcChcbiAgICAgICAgICAgIChjb21wdXRlcikgPT4gY29tcHV0ZXIuZ2V0SWQoKVxuICAgICAgICApO1xuICAgICAgICBsZXQgY29tcHV0ZXJJZDogbnVtYmVyID0gTWF0aC5tYXgoLi4uY29tcHV0ZXJJZHMpICsgMTtcblxuICAgICAgICBsZXQgY29tcHV0ZXIgPSBuZXcgY29tcHV0ZXJNb2RlbC5jb21wdXRlcihjb21wdXRlcklkLCBjb21wdXRlclRpdGxlLCBjb21wdXRlckF1dGhvciwgY29tcHV0ZXJQdWJsaWNhdGlvbkRhdGUpO1xuXG4gICAgICAgIHRoaXMuY29tcHV0ZXJzTGlzdC5wdXNoKGNvbXB1dGVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcHV0ZXJzTGlzdDtcbiAgICB9XG4gICAgcHVibGljIGRlbGV0ZShjb21wdXRlcklkOiBudW1iZXIpOiBCb29sZWFuXG4gICAge1xuICAgICAgbGV0IGRlbGV0ZWQ6IEJvb2xlYW4gPSBmYWxzZTtcbiAgICAgIHRoaXMuY29tcHV0ZXJzTGlzdCA9IHRoaXMuY29tcHV0ZXJzTGlzdC5maWx0ZXIoXG4gICAgICAgIChjb21wdXRlcjogY29tcHV0ZXJNb2RlbC5jb21wdXRlcikgPT4ge1xuICAgICAgICAgIGRlbGV0ZWQgPSBkZWxldGVkIHx8IGNvbXB1dGVyLmdldElkKCkgPT09IGNvbXB1dGVySWQ7XG4gICAgICAgICAgcmV0dXJuIGNvbXB1dGVyLmdldElkKCkgIT09IGNvbXB1dGVySWRcbiAgICAgICAgfVxuICAgICAgKVxuICAgICAgcmV0dXJuIGRlbGV0ZWQ7XG4gICAgfVxuICAgIHB1YmxpYyBmZXRjaChjb21wdXRlcklkOiBudW1iZXIpOiBjb21wdXRlck1vZGVsLmNvbXB1dGVyIHtcbiAgICAgICAgcmV0dXJuIGNvbXB1dGVySWQgJiYgdGhpcy5jb21wdXRlcnNMaXN0LmZpbHRlcihcbiAgICAgICAgICAgIChjb21wdXRlcjogY29tcHV0ZXJNb2RlbC5jb21wdXRlcikgPT4gY29tcHV0ZXIuZ2V0SWQoKSA9PT0gY29tcHV0ZXJJZFxuICAgICAgICApLnNoaWZ0KCk7XG4gICAgfVxuICAgIHB1YmxpYyBmaW5kKGNvbXB1dGVyUXVlcnk6IHN0cmluZyk6IGNvbXB1dGVyTW9kZWwuY29tcHV0ZXIge1xuICAgICAgbGV0IGNvbXB1dGVySWQ6IG51bWJlciA9IHBhcnNlSW50KGNvbXB1dGVyUXVlcnkpO1xuICAgICAgY29tcHV0ZXJRdWVyeSA9IGNvbXB1dGVyUXVlcnkudG9Mb3dlckNhc2UoKTtcbiAgICAgIHJldHVybiB0aGlzLmNvbXB1dGVyc0xpc3QuZmlsdGVyKFxuICAgICAgICAgIChjb21wdXRlcjogY29tcHV0ZXJNb2RlbC5jb21wdXRlcikgPT4gY29tcHV0ZXIuZ2V0SWQoKSA9PT0gY29tcHV0ZXJJZFxuICAgICAgICAgIHx8IGNvbXB1dGVyLmdldFRpdGxlKCkudG9Mb3dlckNhc2UoKSA9PT0gY29tcHV0ZXJRdWVyeVxuICAgICAgICAgIHx8IGNvbXB1dGVyLmdldEF1dGhvcigpLnRvTG93ZXJDYXNlKCkgPT09IGNvbXB1dGVyUXVlcnlcbiAgICAgICkuc2hpZnQoKTtcbiAgICB9XG59XG4iXX0=
